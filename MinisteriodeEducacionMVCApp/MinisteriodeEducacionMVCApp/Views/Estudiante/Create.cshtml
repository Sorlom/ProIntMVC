@model MinisteriodeEducacionMVCApp.Models.Estudiante

@{
    ViewBag.Title = "Create";
}

<h2>Crear</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Estudiante</h4>
        <h5>@ViewBag.Msg</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.loginEstudiante, "Login Estudiantes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.loginEstudiante, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.loginEstudiante, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passEstudiante, "Pass Estudiantes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passEstudiante, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passEstudiante, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idListaEstudiante, "Correo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idListaEstudiante", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idListaEstudiante, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.correo, "Verificar Correo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CI, "CI", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CI", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CI, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.idRol, "Rol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idRol", null, htmlAttributes: new { @disabled = "disabled",@class = "form-control" })
                @Html.HiddenFor(model => model.idRol, new { @Value = "3" })
                @Html.ValidationMessageFor(model => model.idRol, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a Login", "Index","Login")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
